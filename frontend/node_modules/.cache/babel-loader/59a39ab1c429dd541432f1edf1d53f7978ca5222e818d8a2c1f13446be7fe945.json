{"ast":null,"code":"var _jsxFileName = \"/home/adam/programming/fun/react-app/hackku/frontend/src/pages/Notify.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StaffCard from '../components/StaffCard';\nimport StaffList from '../components/StaffList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notify = () => {\n  _s();\n  const [selectedStaff, setSelectedStaff] = useState([]);\n  const handleCheckboxChange = email => {\n    setSelectedStaff(prevSelected => {\n      if (prevSelected.includes(email)) {\n        return prevSelected.filter(item => item !== email);\n      } else {\n        return [...prevSelected, email];\n      }\n    });\n  };\n  const sendEmails = async () => {\n    selectedStaff.forEach(({\n      email,\n      name,\n      sunday,\n      monday,\n      tuesday,\n      wednesday,\n      thursday,\n      friday,\n      saturday\n    }) => {\n      fetch(`http://localhost:3001/mail?to=${email}&name=${name}&sunday=${sunday}&monday=${monday}&tuesday=${tuesday}&wednesday=${wednesday}&thursday=${thursday}&friday=${friday}&saturday=${saturday}`).then(res => res.text()).then(res => console.log(`Email sent to (${email}):`, res)).catch(err => console.error(`Error sending email to (${email}):`, err));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Manage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notification Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StaffCard, {\n      onCheck: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginBottom: \"50px\"\n      },\n      onClick: sendEmails,\n      children: \"Notify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Notify, \"ZvbGLPzoxYsdKMNd0d+I8qxI3oI=\");\n_c = Notify;\nexport default Notify;\nvar _c;\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"names":["React","useState","StaffCard","StaffList","jsxDEV","_jsxDEV","Notify","_s","selectedStaff","setSelectedStaff","handleCheckboxChange","email","prevSelected","includes","filter","item","sendEmails","forEach","name","sunday","monday","tuesday","wednesday","thursday","friday","saturday","fetch","then","res","text","console","log","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCheck","style","marginBottom","onClick","_c","$RefreshReg$"],"sources":["/home/adam/programming/fun/react-app/hackku/frontend/src/pages/Notify.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport StaffCard from '../components/StaffCard';\nimport StaffList from '../components/StaffList';\n\nconst Notify = () => {\n\n    const [selectedStaff, setSelectedStaff] = useState([]);\n\n    const handleCheckboxChange = (email) => {\n        setSelectedStaff((prevSelected) => {\n            if (prevSelected.includes(email)) {\n                return prevSelected.filter((item) => item !== email);\n            } else {\n                return [...prevSelected, email];\n            }\n        });\n    };\n\n    const sendEmails = async () => {\n        selectedStaff.forEach(({ email, name, sunday, monday, tuesday, wednesday, thursday, friday, saturday }) => {\n            fetch(`http://localhost:3001/mail?to=${email}&name=${name}&sunday=${sunday}&monday=${monday}&tuesday=${tuesday}&wednesday=${wednesday}&thursday=${thursday}&friday=${friday}&saturday=${saturday}`)\n                .then(res => res.text())\n                .then(res => console.log(`Email sent to (${email}):`, res))\n                .catch(err => console.error(`Error sending email to (${email}):`, err));\n        });\n    };\n\n    return (\n        <div className=\"Manage\">\n            <h1>Notification Panel</h1>\n            <StaffCard onCheck={handleCheckboxChange}/>    \n            <button style={{marginBottom:\"50px\"}} onClick={sendEmails}>Notify</button>\n        </div>\n    );\n}\n\nexport default Notify;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,oBAAoB,GAAIC,KAAK,IAAK;IACpCF,gBAAgB,CAAEG,YAAY,IAAK;MAC/B,IAAIA,YAAY,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC9B,OAAOC,YAAY,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,KAAK,CAAC;MACxD,CAAC,MAAM;QACH,OAAO,CAAC,GAAGC,YAAY,EAAED,KAAK,CAAC;MACnC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BR,aAAa,CAACS,OAAO,CAAC,CAAC;MAAEN,KAAK;MAAEO,IAAI;MAAEC,MAAM;MAAEC,MAAM;MAAEC,OAAO;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAS,CAAC,KAAK;MACvGC,KAAK,CAAE,iCAAgCf,KAAM,SAAQO,IAAK,WAAUC,MAAO,WAAUC,MAAO,YAAWC,OAAQ,cAAaC,SAAU,aAAYC,QAAS,WAAUC,MAAO,aAAYC,QAAS,EAAC,CAAC,CAC9LE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIE,OAAO,CAACC,GAAG,CAAE,kBAAiBpB,KAAM,IAAG,EAAEiB,GAAG,CAAC,CAAC,CAC1DI,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAE,2BAA0BvB,KAAM,IAAG,EAAEsB,GAAG,CAAC,CAAC;IAC/E,CAAC,CAAC;EACN,CAAC;EAED,oBACI5B,OAAA;IAAK8B,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnB/B,OAAA;MAAA+B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnC,OAAA,CAACH,SAAS;MAACuC,OAAO,EAAE/B;IAAqB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3CnC,OAAA;MAAQqC,KAAK,EAAE;QAACC,YAAY,EAAC;MAAM,CAAE;MAACC,OAAO,EAAE5B,UAAW;MAAAoB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEd,CAAC;AAAAjC,EAAA,CA9BKD,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}